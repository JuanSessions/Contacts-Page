{"version":3,"sources":["components/Home.jsx","components/Login.jsx","components/Register.jsx","components/books/BooksOrder.jsx","components/NotFound.jsx","components/UserAccountInfo.jsx","Routes.jsx","components/Navbar.js","components/NavBar1.jsx","App.js","serviceWorker.js","index.js"],"names":["Home","useState","data","setData","useEffect","fetch","then","response","json","console","log","items","catch","err","className","map","item","src","volumeInfo","imageLinks","thumbnail","alt","authors","Login","props","email","setEmail","password","setPassword","handleLogin","e","a","preventDefault","userData","options","method","headers","body","JSON","stringify","success","setLogIn","alert","get","LogIn","to","onSubmit","type","name","placeholder","onChange","target","value","required","UserRegistration","firstName","setFirstName","lastName","setLastName","role","setRole","handleRegistration","BooksOrder","NotFound","UserAccountInfo","setUserData","res","contact","user","i","Routes","logIn","exact","path","component","Register","render","Navbar","activeClassName","NavBar1","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.e1af5aa8.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport BooksList from './books/BooksList';\n\n\n\nconst Home = () => {\n\n    const [data, setData] = useState([])\n\n    useEffect(() => {\n        fetch(\"https://google-books.p.rapidapi.com/volumes\", {\n            \"method\": \"GET\",\n            \"headers\": {\n                \"x-rapidapi-host\": \"google-books.p.rapidapi.com\",\n                \"x-rapidapi-key\": \"0b9293b7c9mshce13606d976dadap1ffc37jsn3bd5bec95c01\"\n            }\n        })\n            .then(response => {\n                let converted = response.json()\n                return converted\n            })\n            .then(data => {\n                console.log(data);\n                setData(data.items)\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    }, [])\n\n    return (\n        <div className=\"library-div\">\n            <h1>- Home Page -</h1>\n            <div className=\"library-items\">\n                {data && data.map(item => {\n                    return (\n                        <div className=\"library-item\">\n                            <img src={item.volumeInfo.imageLinks.thumbnail} alt=\"a\" />\n                            <p>{item.volumeInfo.authors}</p>\n\n                        </div>\n                    )\n                })}\n            </div>\n            {/* <BooksList /> */}\n        </div>\n    );\n};\n\nexport default Home;","import React, { useState } from 'react';\nimport '../style/App.scss';\nimport { Redirect } from 'react-router-dom';\n\n\nexport default function Login(props) {\n    const [email, setEmail] = useState(null);\n    const [password, setPassword] = useState(null);\n\n    const handleLogin = async (e) => {\n        e.preventDefault();\n        const userData = {\n            email: email,\n            password: password\n        };\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(userData)\n        };\n        const response = await fetch('http://localhost:3001/contacts/login', options);\n        const data = await response.json();\n        console.log('data response:', data);\n\n\n        if (data.success) {\n            props.setLogIn(true)\n            console.log(\"login\")\n        } else {\n            alert(\"wrong login data\")\n        }\n        console.log(response.headers.get(\"x-auth\"))\n    }\n\n    return (\n        <div className=\"login-container\">\n            {props.LogIn ? <Redirect to=\"/\" /> :\n                <div className=\"form-container\">\n                    <h2>Login</h2>\n                    <form onSubmit={handleLogin}>\n                        <input type=\"text\" name=\"email\" placeholder=\"Enter Email\" onChange={(e) => setEmail(e.target.value)} required />\n                        <input type=\"password\" name=\"password\" placeholder=\"Enter Password\" onChange={(e) => setPassword(e.target.value)} required />\n                        <button type=\"submit\" className=\"btn-submit\">Login</button>\n                    </form>\n                </div>\n            }\n        </div>\n    )\n}\n","import React, { useState } from 'react';\nimport '../style/App.scss';\n// import { Redirect } from 'react-router-dom';\n\nexport default function UserRegistration() {\n\n    const [email, setEmail] = useState(null);\n    const [password, setPassword] = useState(null);\n    const [firstName, setFirstName] = useState(null);\n    const [lastName, setLastName] = useState(null);\n    const [role, setRole] = useState(null);\n\n    const handleRegistration = async (e) => {\n        e.preventDefault();\n        const userData = {\n            firstName,\n            lastName,\n            email,\n            password,\n            role\n        };\n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(userData)\n        };\n\n        const response = await fetch('http://localhost:3001/contacts', options);\n        const data = await response.json();\n        console.log('data response:', data);\n\n    };\n\n\n\n    return (\n\n        <div className=\"user-regist-form form-container\">\n            <div className=\"form-wrap\">\n                <form onSubmit={handleRegistration}>\n                    <h1>Sign Up!</h1>\n                    <input type=\"text\" placeholder=\"First Name\" onChange={(e) => setFirstName(e.target.value)} />\n                    <input type=\"text\" placeholder=\"Last Name\" onChange={(e) => setLastName(e.target.value)} />\n                    <input type=\"email\" placeholder=\"Email\" onChange={(e) => setEmail(e.target.value)} />\n                    <input type=\"password\" placeholder=\"Password\" onChange={(e) => setPassword(e.target.value)} />\n                    <input type=\"password\" placeholder=\"Confirm Password\" onChange={(e) => setPassword(e.target.value)} />\n                    <input type=\"role\" placeholder=\"User/Admin\" onChange={(e) => setRole(e.target.value)} />\n\n                    <button type=\"submit\" className=\"btn-submit\">Sign Up</button>\n                </form>\n            </div>\n        </div>\n    )\n}\n\n\n","import React from 'react'\n\nfunction BooksOrder() {\n    return (\n        <div>\n            <h1>Orders</h1>\n            <p> Previous orders and current order of the user </p>\n        </div>\n    )\n}\n\nexport default BooksOrder\n","import React from 'react'\n\nfunction NotFound() {\n    return (\n        <div>\n            sorry, the page is not found.\n        </div>\n    )\n}\n\nexport default NotFound\n","import React, { useEffect, useState } from 'react'\n\nfunction UserAccountInfo(props) {\n    console.log(\"props:\", props);\n    const [firstName, setFirstName] = useState(null)\n    const [userData, setUserData] = useState(null)\n\n    useEffect(() => {\n        fetch('http://localhost:3001/contacts')\n            .then(res => res.json())\n            .then(data => {\n                setUserData(data.contact)\n            })\n\n    }, [])\n\n\n    console.log(\"user data:\", userData)\n\n    return (\n        <div>\n            <h1>User Personal Info</h1>\n            <h3>Items purchased and history</h3>\n\n            {\n                userData && userData.map((user, i) => {\n                    return (\n                        <div>\n                            <h3>{user.firstName} </h3>\n                        </div>\n                    )\n                })\n            }\n        </div>\n    )\n}\n\nexport default UserAccountInfo\n","import React from 'react'\nimport { Route, Switch } from 'react-router-dom';\nimport Home from \"./components/Home\"\nimport Login from \"./components/Login\"\nimport Register from \"./components/Register\"\nimport BooksOrder from \"./components/books/BooksOrder\"\nimport NotFound from \"./components/NotFound\"\nimport UserAccountInfo from './components/UserAccountInfo';\n\n\n\nfunction Routes(props) {\n\n    const { logIn, setLogIn } = props\n\n    return (\n\n        <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/register\" component={Register} />\n\n            <Route path=\"/orders\" component={BooksOrder} />\n\n            {/* <Route path=\"/books\"\n                render={(props) =>\n                    <BooksList {...props} logIn={logIn} setLogIn={setLogIn} />} /> */}\n\n            <Route path=\"/login\"\n                render={(props) =>\n                    <Login {...props} logIn={logIn} setLogIn={setLogIn} />} />\n            <Route path=\"/contact\"\n                render={(props) =>\n                    <UserAccountInfo {...props} logIn={logIn} setLogIn={setLogIn} />} />\n            <Route component={NotFound} />\n        </Switch>\n\n    )\n}\n\nexport default Routes\n","import React from 'react';\nimport { NavLink } from \"react-router-dom\";\n\n\nfunction Navbar() {\n\n    return (\n        <nav>\n            <ul className=\"section\">\n                <li>\n                    <NavLink to=\"/\" exact activeClassName=\"active\" className=\"ai-element__label\" >\n                        <button> Home</button>\n                    </NavLink>\n                </li>\n                <li>\n                    <NavLink to=\"/login\" exact activeClassName=\"active\" className=\"ai-element__label\" >\n                        <button>Login</button>\n                    </NavLink>\n                </li>\n                <li>\n                    <NavLink to=\"/register\" exact activeClassName=\"active\" className=\"ai-element__label\" >\n                        <button>Register</button>\n                    </NavLink>\n                </li>\n\n            </ul>\n        </nav>\n\n    )\n}\n\nexport default Navbar\n","import React from 'react';\n import {NavLink} from \"react-router-dom\"\nconst NavBar1 = () => {\n    return (\n        <div>\n           <ul className=\"nav1\">\n                       <li>\n                    <NavLink to=\"/contact\" activeClassName=\"active\" className=\"ai-element__label\">\n                        User Account Info\n                        \n                    </NavLink>\n                </li>\n\n                <li>\n                    <NavLink to=\"/orders\" activeClassName=\"active\" className=\"ai-element__label\">\n                       Books Orders\n\n                    </NavLink>\n                </li>\n           </ul>\n        </div>\n    );\n}\n \nexport default NavBar1;","import React, { useState } from 'react';\nimport './style/App.scss';\nimport { BrowserRouter } from \"react-router-dom\"\nimport Routes from './Routes.jsx';\nimport Navbar from \"./components/Navbar\"\nimport NavBar1 from './components/NavBar1';\n\n\n\nfunction App() {\n  const [logIn, setLogIn] = useState(false);\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <header className=\"App-header\">\n        </header>\n        <Navbar />\n        {logIn && <NavBar1 />}\n        <Routes logIn={logIn} setLogIn={setLogIn} />\n\n\n\n\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}